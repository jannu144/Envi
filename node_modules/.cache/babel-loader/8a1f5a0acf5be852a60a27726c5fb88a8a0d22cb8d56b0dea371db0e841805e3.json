{"ast":null,"code":"var _jsxFileName = \"/Users/sanjanas./Desktop/hacks9-v1.0.1/src/components/Input/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst variants = {\n  fill: {\n    light_green_300: \"bg-light_green-300 text-gray-800\",\n    light_green_50: \"bg-light_green-50 text-black-900\"\n  }\n};\nconst shapes = {\n  round: \"rounded-[20px]\"\n};\nconst sizes = {\n  xs: \"p-px\",\n  sm: \"p-1.5\",\n  md: \"pb-2.5 pt-3 px-2.5\"\n};\nconst Input = /*#__PURE__*/React.forwardRef(_c = ({\n  wrapClassName = \"\",\n  className = \"\",\n  name = \"\",\n  placeholder = \"\",\n  type = \"text\",\n  children,\n  errors = [],\n  label = \"\",\n  prefix,\n  suffix,\n  onChange,\n  shape = \"\",\n  size = \"sm\",\n  variant = \"fill\",\n  color = \"light_green_50\",\n  ...restProps\n}, ref) => {\n  var _variants$variant;\n  const handleChange = e => {\n    var _e$target;\n    if (onChange) onChange(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${wrapClassName} \n              ${shapes[shape] || \"\"} \n              ${((_variants$variant = variants[variant]) === null || _variants$variant === void 0 ? void 0 : _variants$variant[color]) || \"\"} \n              ${sizes[size] || \"\"}`,\n      children: [!!label && label, !!prefix && prefix, /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        className: `${className} bg-transparent border-0`,\n        type: type,\n        name: name,\n        onChange: handleChange,\n        placeholder: placeholder,\n        ...restProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), !!suffix && suffix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), !!errors && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n});\n_c2 = Input;\nInput.propTypes = {\n  wrapClassName: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  shape: PropTypes.oneOf([\"round\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\"]),\n  variant: PropTypes.oneOf([\"fill\"]),\n  color: PropTypes.oneOf([\"light_green_300\", \"light_green_50\"])\n};\nexport { Input };\nvar _c, _c2;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"names":["React","PropTypes","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","variants","fill","light_green_300","light_green_50","shapes","round","sizes","xs","sm","md","Input","forwardRef","_c","wrapClassName","className","name","placeholder","type","children","errors","label","prefix","suffix","onChange","shape","size","variant","color","restProps","ref","_variants$variant","handleChange","e","_e$target","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","string","oneOf","$RefreshReg$"],"sources":["/Users/sanjanas./Desktop/hacks9-v1.0.1/src/components/Input/index.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\n\nconst variants = {\n  fill: {\n    light_green_300: \"bg-light_green-300 text-gray-800\",\n    light_green_50: \"bg-light_green-50 text-black-900\",\n  },\n};\nconst shapes = { round: \"rounded-[20px]\" };\nconst sizes = { xs: \"p-px\", sm: \"p-1.5\", md: \"pb-2.5 pt-3 px-2.5\" };\n\nconst Input = React.forwardRef(\n  (\n    {\n      wrapClassName = \"\",\n      className = \"\",\n      name = \"\",\n      placeholder = \"\",\n      type = \"text\",\n      children,\n      errors = [],\n      label = \"\",\n      prefix,\n      suffix,\n      onChange,\n      shape = \"\",\n      size = \"sm\",\n      variant = \"fill\",\n      color = \"light_green_50\",\n      ...restProps\n    },\n    ref,\n  ) => {\n    const handleChange = (e) => {\n      if (onChange) onChange(e?.target?.value);\n    };\n\n    return (\n      <>\n        <div\n          className={`${wrapClassName} \n              ${shapes[shape] || \"\"} \n              ${variants[variant]?.[color] || \"\"} \n              ${sizes[size] || \"\"}`}\n        >\n          {!!label && label}\n          {!!prefix && prefix}\n          <input\n            ref={ref}\n            className={`${className} bg-transparent border-0`}\n            type={type}\n            name={name}\n            onChange={handleChange}\n            placeholder={placeholder}\n            {...restProps}\n          />\n          {!!suffix && suffix}\n        </div>\n        {!!errors && <ErrorMessage errors={errors} />}\n      </>\n    );\n  },\n);\n\nInput.propTypes = {\n  wrapClassName: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  shape: PropTypes.oneOf([\"round\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\"]),\n  variant: PropTypes.oneOf([\"fill\"]),\n  color: PropTypes.oneOf([\"light_green_300\", \"light_green_50\"]),\n};\n\nexport { Input };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}